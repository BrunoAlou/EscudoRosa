// Script de teste para verificar componentes
console.log('üß™ Testando carregamento de componentes...');

// Fun√ß√£o para aguardar carregamento dos componentes
function waitForComponentsAndTest() {
    const expectedComponents = ['alertComponent', 'formComponent', 'mapComponent', 'safeWalkComponent'];
    const allComponentsLoaded = expectedComponents.every(componentName => window[componentName]);
    
    if (allComponentsLoaded) {
        console.log('üéâ Todos os componentes carregados! Iniciando testes...');
        runComponentTests();
    } else {
        console.log('‚è≥ Aguardando carregamento dos componentes...');
        setTimeout(waitForComponentsAndTest, 500);
    }
}

// Fun√ß√£o para executar os testes
function runComponentTests() {
    console.log('üîç Verificando componentes...');
    
    if (window.alertComponent) {
        console.log('‚úÖ alertComponent: OK');
        console.log('   - M√©todos dispon√≠veis:', Object.getOwnPropertyNames(Object.getPrototypeOf(window.alertComponent)));
        
        // Testa se o m√©todo showDangerAlert existe
        if (typeof window.alertComponent.showDangerAlert === 'function') {
            console.log('   - showDangerAlert: ‚úÖ Funcionando');
        } else {
            console.error('   - showDangerAlert: ‚ùå N√£o encontrado');
        }
    } else {
        console.error('‚ùå alertComponent: N√£o encontrado');
    }
    
    if (window.formComponent) {
        console.log('‚úÖ formComponent: OK');
        console.log('   - M√©todos dispon√≠veis:', Object.getOwnPropertyNames(Object.getPrototypeOf(window.formComponent)));
        
        // Testa se o m√©todo showInsecurityForm existe
        if (typeof window.formComponent.showInsecurityForm === 'function') {
            console.log('   - showInsecurityForm: ‚úÖ Funcionando');
        } else {
            console.error('   - showInsecurityForm: ‚ùå N√£o encontrado');
        }
    } else {
        console.error('‚ùå formComponent: N√£o encontrado');
    }
    
    if (window.mapComponent) {
        console.log('‚úÖ mapComponent: OK');
        console.log('   - M√©todos dispon√≠veis:', Object.getOwnPropertyNames(Object.getPrototypeOf(window.mapComponent)));
        
        // Testa se o m√©todo showRiskMap existe
        if (typeof window.mapComponent.showRiskMap === 'function') {
            console.log('   - showRiskMap: ‚úÖ Funcionando');
        } else {
            console.error('   - showRiskMap: ‚ùå N√£o encontrado');
        }
    } else {
        console.error('‚ùå mapComponent: N√£o encontrado');
    }
    
    if (window.safeWalkComponent) {
        console.log('‚úÖ safeWalkComponent: OK');
        console.log('   - M√©todos dispon√≠veis:', Object.getOwnPropertyNames(Object.getPrototypeOf(window.safeWalkComponent)));
        
        // Testa se o m√©todo showSafeWalkForm existe
        if (typeof window.safeWalkComponent.showSafeWalkForm === 'function') {
            console.log('   - showSafeWalkForm: ‚úÖ Funcionando');
        } else {
            console.error('   - showSafeWalkForm: ‚ùå N√£o encontrado');
        }
    } else {
        console.error('‚ùå safeWalkComponent: N√£o encontrado');
    }
    
    console.log('üß™ Teste conclu√≠do!');
    
    // Testa se os bot√µes est√£o funcionando
    console.log('üîò Testando bot√µes...');
    const dangerButton = document.querySelector('.danger-button');
    if (dangerButton) {
        console.log('‚úÖ Bot√£o de perigo encontrado');
        dangerButton.addEventListener('click', () => {
            console.log('üîò Bot√£o de perigo clicado!');
        });
    } else {
        console.error('‚ùå Bot√£o de perigo n√£o encontrado');
    }
    
    // Testa se o pagesLoader est√° funcionando
    if (window.pagesLoader) {
        console.log('‚úÖ pagesLoader: OK');
        console.log('   - M√©todos dispon√≠veis:', Object.getOwnPropertyNames(Object.getPrototypeOf(window.pagesLoader)));
    } else {
        console.error('‚ùå pagesLoader: N√£o encontrado');
    }
    
    // Testa se PAGES_CONFIG est√° dispon√≠vel
    if (window.PAGES_CONFIG) {
        console.log('‚úÖ PAGES_CONFIG: OK');
        console.log('   - P√°ginas configuradas:', Object.keys(window.PAGES_CONFIG));
    } else {
        console.error('‚ùå PAGES_CONFIG: N√£o encontrado');
    }
}

// Aguarda o DOM estar pronto
if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', () => {
        // Aguarda um pouco para os componentes com defer carregarem
        setTimeout(waitForComponentsAndTest, 100);
    });
} else {
    // DOM j√° est√° pronto, aguarda um pouco para os componentes carregarem
    setTimeout(waitForComponentsAndTest, 100);
} 